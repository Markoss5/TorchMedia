@using System.Linq
@model TorchMedia.Models.ContactanosViewModel

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contactanos | Torchmedia</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="icon" href="Img/favicon.ico" type="image/x-icon">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.main.css">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;700&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" defer></script>
    <script src="https://cdn.emailjs.com/dist/email.min.js"></script>
    <style>
        body {
            font-family: 'Montserrat', Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            padding-top: 150px;
        }

        nav {
            z-index: 1000;
        }

        nav button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            transition: transform 0.3s ease;
            text-decoration: none;
        }

        .form-container {
            margin-top: 105px;
            background-color: #ffffff;
            padding: 2rem;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 600px;
            box-sizing: border-box;
        }

        .form-container h2 {
            text-align: center;
            margin-bottom: 1rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            border-color: #007bff;
            outline: none;
        }

        .form-group input[type="radio"] {
            width: auto;
        }

        .form-actions {
            display: flex;
            justify-content: space-between;
        }

        .form-actions button {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1rem;
        }

        .form-actions button[type="submit"] {
            background-color: #4CAF50;
            color: #ffffff;
        }

        .form-actions button[type="reset"] {
            background-color: #6c757d;
            color: #ffffff;
        }

        .notification {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #28a745;
            color: #fff;
            padding: 10px 20px;
            border-radius: 5px;
            display: none;
            z-index: 1000;
        }

        .acept {
            align-items: center;
            text-align: center;
        }

        
    </style>
</head>

<body>
    <header>
        <div class="container">
            <nav>
                <div class="logo">
                    <img src="Img/logo.png" width="75px" alt="Logo TorchMedia">
                    <a href="index.html">
                        <h1>TorchMedia</h1>
                    </a>
                </div>
                <div class="hamburger" id="hamburger">
                    <i class="fas fa-bars"></i>
                </div>
                <ul class="nav-links" id="nav-links">
                    <li><a href="index.html#quienes-somos">Quienes Somos</a></li>
                    <li><a href="index.html#nuestros-servicios">Nuestros Servicios</a></li>
                    <li><a href="index.html#proyectos">Proyectos</a></li>
                    <li><a href="index.html#testimonios">Testimonios</a></li>
                    <li><a href="index.html" class="button">Volver </a></li>
                </ul>
            </nav>
        </div>
    </header>
    <div class="form-container">
        <b>
            <h2>Contactanos</h2>
        </b>
        <h2>Contact Us</h2>
        <form id="form">
            <div class="form-group">
                <label for="name">Nombre / Name</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">Correo / Email</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="country">País / Country</label>
                <input type="text" id="country" name="country" required>
            </div>
            <div class="form-group">
                <label for="service">Tipo de servicio / Type of Service</label>
                <select id="service" name="service" required>
                    <option value="Edición y estrategias de contenido">Edición y estrategias de contenido / Content Editing and Strategy</option>
                    <option value="Guiones y portadas para tus videos">Guiones y portadas para tus videos / Scripts and Covers for Your Videos</option>
                    <option value="Embudos de venta">Embudos de venta / Sales Funnels</option>
                </select>
            </div>
            <div class="form-group">
                <label>¿Nos contrató antes? / Did you hire us before?</label>
                <label><input type="radio" name="hired_before" value="si" required> Sí / Yes</label>
                <label><input type="radio" name="hired_before" value="no" required> No / No</label>
            </div>
            <div class="form-group">
                <label for="message">Mensaje / Message</label>
                                <textarea id="message" name="message" rows="4" required></textarea>
            </div>
            <div class="acept">
                <input type="checkbox" id="terms" required>
                Acepto los <a href="https://drive.google.com/file/d/10mRn73rufIntUtSk8JF9nM5uv9B83NRI/view?usp=sharing">Términos y Condiciones de TorchMedia S.A.</a>
                <br>
                <input type="checkbox" id="consent" required>
                Consiento brindar mis datos a TorchMediaGrowth
            </div>

            <div class="form-actions">
                <button type="submit">Enviar/Send</button>
                <button type="reset">Reiniciar/Reset</button>
            </div>
        </form>

        <div class="form-group">
            <label for="fecha">Selecciona una fecha disponible</label>
            <select id="fecha" name="fecha">
                @foreach (var disponibilidad in Model.Disponibilidad)
                {
                    <option value="@disponibilidad.Fecha">@disponibilidad.Fecha.ToString("dd/MM/yyyy HH:mm")</option>
                }
            </select>
        </div>


<div class="form-group">
    <label for="fecha">Selecciona una fecha disponible</label>
@if (Model.Disponibilidad != null && Model.Disponibilidad.Any())
{
    <p>Disponibilidad detectada:</p>
    foreach (var disponibilidad in Model.Disponibilidad)
    {
        <p>@disponibilidad.Fecha - @disponibilidad.HoraInicio - @disponibilidad.HoraFin</p>
    }
}
else
{
    <p>No hay disponibilidad en este momento.</p>
}
</div>

    </div>
    <div class="notification" id="success-notification">
        <p>Formulario enviado exitosamente.</p>
        <p>Pronto nos pondremos en contacto contigo.</p>
        <p>We will contact you soon.</p>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const hamburger = document.getElementById('hamburger');
            const navLinks = document.getElementById('nav-links');

            hamburger.addEventListener('click', function () {
                navLinks.classList.toggle('show');
            });

            emailjs.init('NjK4XwJ7bmT-dVhNt');

            const form = document.getElementById('form');
            const nameInput = document.getElementById('name');
            const emailInput = document.getElementById('email');
            const countryInput = document.getElementById('country');
            const serviceInput = document.getElementById('service');
            const hiredBeforeInputs = document.getElementsByName('hired_before');
            const messageInput = document.getElementById('message');
            const serviceID = 'service_mtnbvjl';
            const templateID = 'template_krchzku';

            // Mostrar notificación de éxito
            function showSuccessNotification() {
                const notification = document.getElementById('success-notification');
                notification.style.display = 'block';
                setTimeout(() => {
                    notification.style.display = 'none';
                }, 5000); // Ocultar la notificación después de 5 segundos
            }

            // Obtener el número de formularios enviados hoy por esta dirección IP
            function getFormsSentToday() {
                const today = new Date().toISOString().split('T')[0]; // Obtener la fecha actual en formato YYYY-MM-DD
                const formData = localStorage.getItem('form_data');
                if (formData) {
                    const data = JSON.parse(formData);
                    return data[today] || 0;
                }
                return 0;
            }

            // Incrementar el contador de formularios enviados hoy por esta dirección IP
            function incrementFormsSentToday() {
                const today = new Date().toISOString().split('T')[0]; // Obtener la fecha actual en formato YYYY-MM-DD
                let formData = localStorage.getItem('form_data');
                if (formData) {
                    formData = JSON.parse(formData);
                } else {
                    formData = {};
                }
                if (!formData[today]) {
                    formData[today] = 0;
                }
                formData[today]++;
                localStorage.setItem('form_data', JSON.stringify(formData));
            }

            form.addEventListener('submit', (e) => {
                e.preventDefault();

                // Verificar el límite de formularios por IP
                const formsSentToday = getFormsSentToday();
                if (formsSentToday >= 3) {
                    alert('Se ha alcanzado el límite de formularios por día desde esta dirección IP.');
                    return;
                }

                let hiredBeforeValue;
                for (const input of hiredBeforeInputs) {
                    if (input.checked) {
                        hiredBeforeValue = input.value;
                        break;
                    }
                }

                const inputData = {
                    from_name: nameInput.value,
                    user_email: emailInput.value,
                    country: countryInput.value,
                    service: serviceInput.value,
                    hired_before: hiredBeforeValue,
                    message: messageInput.value,
                };

                emailjs.send(serviceID, templateID, inputData).then(
                    () => {
                        console.log('Success!');
                        showSuccessNotification();
                        form.reset();
                        incrementFormsSentToday(); // Incrementar el contador de formularios enviados hoy
                    },
                    (error) => {
                        console.log('Failed...', error);
                    }
                );
            });
        });
    </script>
</body>

</html>

